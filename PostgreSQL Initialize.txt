--PostgreSQL 11 initialize
--!!!! PostgreSQL Setting
--1. 修改 C:\Program Files\PostgreSQL\11\data\pg_hba.conf
--加入 host    db_gross             AP             0.0.0.0/0               md5
--設定可存取資料庫的白名單
--2. 防火牆加入輸入規則開啟 5432 port


-- !!important!! 單引號表示字串，雙引號有特別意義

CREATE ROLE "AP" WITH
	LOGIN
	NOSUPERUSER
	NOCREATEDB
	NOCREATEROLE
	INHERIT
	NOREPLICATION
	CONNECTION LIMIT -1
	PASSWORD 'ap';


CREATE TABLESPACE ts_gross
  OWNER "AP"
  LOCATION 'c:\pgData';

ALTER TABLESPACE ts_gross
  OWNER TO "AP";


CREATE DATABASE db_gross
    WITH 
    OWNER = "AP"
    TEMPLATE = template0
    ENCODING = 'UTF8'
    LC_COLLATE = 'Chinese (Traditional)_Taiwan.950'
    LC_CTYPE = 'Chinese (Traditional)_Taiwan.950'
    TABLESPACE = ts_gross
    CONNECTION LIMIT = -1;

CREATE SCHEMA gross
    AUTHORIZATION "AP";


ALTER DEFAULT PRIVILEGES
GRANT ALL ON TABLES TO "AP";

-- SYSLOG
CREATE TABLE gross.sys_log_tb
(
id SERIAL,
event_name VARCHAR(20) NOT NULL,
params VARCHAR(200),
op_date VARCHAR(8) NOT NULL,
op_time VARCHAR(6) NOT NULL,
PRIMARY KEY (id)
);
create index sys_log_i1 on gross.sys_log_tb (op_date);
create index sys_log_i2 on gross.sys_log_tb (event_name,op_date);


-- 檢體編號 取號 counter
  CREATE TABLE gross.order_counter_tb 
   (
    id SERIAL,	
    head VARCHAR(3) NOT NULL ,        /* 檢體編號分類頭 */
    break_key VARCHAR(16) NOT NULL ,  /* 檢體編號次分類跳號規則 */
    counter INT NOT NULL ,            /* 檢體目前取號數 */
    PRIMARY KEY (id)
   );

  create unique index order_counter_ui1 on gross.order_counter_tb (head,break_key);



-- 檢體編號 列印 Log
Create table gross.order_barcode_log_tb
(
  id SERIAL,
  ord_no VARCHAR(10) NOT NULL,       /* 檢體編號 */
  amount INT,                        /* Barcode 列印數量 */
  op_date VARCHAR(8) NOT NULL,       /* Barcode 列印日期 */
  op_time VARCHAR(6) NOT NULL,       /* Barcode 列印時間 */
  reprint VARCHAR(1) NOT NULL,       /* Barcode 重印註記 Y/N */
  PRIMARY KEY (id)
);

create index order_barcode_log_i1 on gross.order_barcode_log_tb (ord_no);
create index order_barcode_log_i2 on gross.order_barcode_log_tb (op_date);


-- Barcode 主檔 Table
Create table gross.order_barcode_tb
(
  id SERIAL,
  ord_no VARCHAR(10),       /* 檢體編號 */
/* 第一作業點 */
  barcode_total_amount INT,       /* 條碼列印總數 */
  cassette_total_amount INT,      /* cassette 列印總數 可做玻片印製的取號 */
  create_date VARCHAR(8) NOT NULL,         /* 第一次列印條碼日期 */
  create_time VARCHAR(6) NOT NULL,
  op_date VARCHAR(8) NOT NULL,             /* 最後一次列印條碼日期 */
  op_time VARCHAR(6) NOT NULL,
  PRIMARY KEY (id)
);


create unique index order_barcode_ui1 on gross.order_barcode_tb (ord_no);



-- cassette 主檔 Table

Create table gross.order_cassette_tb
(
  id SERIAL,
  ord_no VARCHAR(10),       /* 檢體編號 */
/* 第二作業點 */ 
  cassette_sequence INT,        /* 同一檢體多個包埋盒序號 */ 
  cassette_remark VARCHAR(10),  /* 包埋盒最新印製備註 */
  cassette_fieldA VARCHAR(10),  /* 包埋盒最新印製FieldA */
  cassette_fieldB VARCHAR(10),  /* 包埋盒最新印製FieldB */
/* 第三作業點 */
  gross_user VARCHAR(10),       /* 處理 Gross 人員 */
  gross_date VARCHAR(8),        /* Gross 最新日期 YYYYMMDD */
  gross_time VARCHAR(6),        /* Gross 最新時間 HHmmSS */
/* 第四作業點 */
  embed_user VARCHAR(10),       /* 處理包埋人員 */
  embed_date VARCHAR(8),        /* 處理包埋日期 YYYYMMDD */
  embed_time VARCHAR(6),        /* 處理包埋時間 HHmmSS */

  slide_total_amount INT,       /* 包埋盒總切片數 可做玻片印製的取號 */
  op_date VARCHAR(8) NOT NULL,           /* 列印cassette日期 */
  op_time VARCHAR(6) NOT NULL,
  PRIMARY KEY (id)
);

create unique index order_cassette_ui1 on gross.order_cassette_tb (ord_no,cassette_sequence);
create index order_cassette_i2 on gross.order_cassette_tb (gross_date,gross_user);
create index order_cassette_i3 on gross.order_cassette_tb (embed_date,embed_user);
create index order_cassette_i4 on gross.order_cassette_tb (op_date);


-- gross 處理 Log
Create table gross.order_gross_log_tb
(
  id SERIAL,
  ord_no VARCHAR(10) NOT NULL,      /* 檢體編號 */
/* 第三作業點 */
  cassette_sequence INT,            /* 同一檢體多個包埋盒序號 */ 
  gross_user VARCHAR(10),           /* 處理 GROSS 人員 */ 
  gross_date VARCHAR(8),        /* Gross 日期 YYYYMMDD */
  gross_time VARCHAR(6),        /* Gross 時間 HHmmSS */
  op_date VARCHAR(8) NOT NULL,      /* system 日期 */
  op_time VARCHAR(6) NOT NULL,      /* system 時間 */
  is_delete_flag VARCHAR(1),        /* gross或取消gross N (normal)/D (delete) */
  PRIMARY KEY (id)
);

create index order_gross_log_i1 on gross.order_gross_log_tb (ord_no,cassette_sequence);
create index order_gross_log_i2 on gross.order_gross_log_tb (gross_date,gross_user);



-- embed 處理 Log
Create table gross.order_embed_log_tb
(
  id SERIAL,
  ord_no VARCHAR(10) NOT NULL,      /* 檢體編號 */
/* 第四作業點 */
  cassette_sequence INT,            /* 同一檢體多個包埋盒序號 */ 
  embed_user VARCHAR(10),           /* 包埋 人員 */ 
  embed_date VARCHAR(8),        /* 處理包埋日期 YYYYMMDD */
  embed_time VARCHAR(6),        /* 處理包埋時間 HHmmSS */
  op_date VARCHAR(8) NOT NULL,      /* system 日期 */
  op_time VARCHAR(6) NOT NULL,      /* system 時間 */
  is_delete_flag VARCHAR(1),        /* 包埋或取消包埋  N (normal)/D (delete)  */
  PRIMARY KEY (id)
);

create index order_embed_log_i1 on gross.order_embed_log_tb (ord_no,cassette_sequence);
create index order_embed_log_i2 on gross.order_embed_log_tb (embed_date,embed_user);



-- slide 玻片
Create table gross.order_slide_tb
(
  id SERIAL,
  ord_no VARCHAR(10),       /* 檢體編號 */
/* 第五作業點 */ 
  cassette_sequence INT,        /* 同一檢體多個包埋盒序號 */ 
  slide_sequence INT,           /* 同一包埋盒多個玻片 */
  slide_user  VARCHAR(10),          /* 玻片印製及撈片人員 */

  slide_remark VARCHAR(10),  /* 玻片最新印製備註 */
  slide_fieldA VARCHAR(10),  /* 玻片最新印製FieldA */
  slide_fieldB VARCHAR(10),  /* 玻片最新印製FieldB */

  doctor_user VARCHAR(10),         /* 分片病理醫師 */
  doctor_date VARCHAR(8),      /* 分片操作日期 */
  doctor_time VARCHAR(6),      /* 分片操作時間 */

  op_date VARCHAR(8) NOT NULL,      /* 玻片印製日期 */
  op_time VARCHAR(6) NOT NULL,      /* 玻片印製時間 */
  PRIMARY KEY (id)
);


create unique index order_slide_ui1 on gross.order_slide_tb (ord_no,cassette_sequence,slide_sequence);
create index order_slide_i2 on gross.order_slide_tb (op_date,slide_user);



-- doctor 分片 Log
Create table gross.doctor_slide_log_tb
(
  id SERIAL,
  ord_no VARCHAR(10) NOT NULL,      /* 檢體編號 */
  cassette_sequence INT,        /* 同一檢體多個包埋盒序號 */ 
  slide_sequence INT,           /* 同一包埋盒多個玻片 */
  doctor_user  VARCHAR(10),         /* 分片病理醫師 */
  doctor_date VARCHAR(8),      /* 分片日期 */
  doctor_time VARCHAR(6),      /* 分片時間 */
  op_date VARCHAR(8) NOT NULL,      /* system 日期 */
  op_time VARCHAR(6) NOT NULL,      /* system 時間 */
  is_delete_flag VARCHAR(1),        /* 分片或取消分片  N (normal)/D (delete) */
  PRIMARY KEY (id)
);

create index doctor_slide_log_i1 on gross.doctor_slide_log_tb (ord_no);
create index doctor_slide_log_i2 on gross.doctor_slide_log_tb (doctor_date,doctor_user);



-- sysparams 
Create table gross.sysparams_tb
(
  id SERIAL,
  name VARCHAR(20) NOT NULL,
  seq INT DEFAULT 0,
  value VARCHAR(20),
  PRIMARY KEY (id)
);

create unique index sysparams_ui1 on gross.sysparams_tb (name,seq);

insert into gross.sysparams_tb (name,seq,value) values ('SLIDE_REMARK',0,'');
insert into gross.sysparams_tb (name,seq,value) values ('SLIDE_REMARK',1,'深切');
insert into gross.sysparams_tb (name,seq,value) values ('SLIDE_REMARK',2,'Recut');
insert into gross.sysparams_tb (name,seq,value) values ('SLIDE_STAIN',0,'');
insert into gross.sysparams_tb (name,seq,value) values ('SLIDE_STAIN',1,'HP');
insert into gross.sysparams_tb (name,seq,value) values ('SLIDE_STAIN',2,'IHC');
insert into gross.sysparams_tb (name,seq,value) values ('SPECIMEN',0,'HP');
insert into gross.sysparams_tb (name,seq,value) values ('SPECIMEN',1,'BM');
insert into gross.sysparams_tb (name,seq,value) values ('SPECIMEN',2,'LV');
insert into gross.sysparams_tb (name,seq,value) values ('SPECIMEN',3,'KI');
insert into gross.sysparams_tb (name,seq,value) values ('SLIDE_TEMPLATE',1,'LayoutSample');
insert into gross.sysparams_tb (name,seq,value) values ('CASSETTE_TEMPLATE',1,'Normal');

commit;

-- Specimen mapping stain  檢體別對照染色
Create table gross.sys_specimen_stain_tb 
(
  id SERIAL,
  specimen VARCHAR(20) NOT NULL,
  seq INT DEFAULT 0,
  stain VARCHAR(50) NOT NULL,
  stop_flag VARCHAR(1) NOT NULL DEFAULT 'N',
  PRIMARY KEY (id)
);

create unique index sys_specimen_stain_ui1 on gross.sys_specimen_stain_tb (specimen,seq);

insert into gross.sys_specimen_stain_tb (specimen,seq,stain) values ('HP',1,'HP');
insert into gross.sys_specimen_stain_tb (specimen,seq,stain) values ('HP',2,'HE');
insert into gross.sys_specimen_stain_tb (specimen,seq,stain) values ('BM',1,'BM');
insert into gross.sys_specimen_stain_tb (specimen,seq,stain) values ('BM',2,'Giemsa');
insert into gross.sys_specimen_stain_tb (specimen,seq,stain) values ('BM',3,'PAS');
insert into gross.sys_specimen_stain_tb (specimen,seq,stain) values ('BM',4,'Ruticulum');
insert into gross.sys_specimen_stain_tb (specimen,seq,stain) values ('LV',1,'Liver');
insert into gross.sys_specimen_stain_tb (specimen,seq,stain) values ('LV',2,'Trichrome');
insert into gross.sys_specimen_stain_tb (specimen,seq,stain) values ('LV',3,'Reticulum');
insert into gross.sys_specimen_stain_tb (specimen,seq,stain) values ('KI',1,'1HE');
insert into gross.sys_specimen_stain_tb (specimen,seq,stain) values ('KI',2,'2PAS');
insert into gross.sys_specimen_stain_tb (specimen,seq,stain) values ('KI',3,'3Silver');
insert into gross.sys_specimen_stain_tb (specimen,seq,stain) values ('KI',4,'4Trichrome');
insert into gross.sys_specimen_stain_tb (specimen,seq,stain) values ('KI',5,'5HE');
insert into gross.sys_specimen_stain_tb (specimen,seq,stain) values ('KI',6,'6HE');

commit;

-- 包埋盒檢體對應卡匣設定 
Create table gross.sys_cassette_magazine_tb 
(
  id SERIAL,
  major_class VARCHAR(20) NOT NULL,
  magazine    VARCHAR(20) NOT NULL,
  PRIMARY KEY (id)
);

create unique index sys_cassette_magazine_ui1 on gross.sys_cassette_magazine_tb (major_class);

insert into gross.sys_cassette_magazine_tb (major_class,magazine) values ('Default','Normal(White)');

commit;

-- 玻片檢體對應Slot設定 
Create table gross.sys_slide_slot_tb 
(
  id SERIAL,
  major_class VARCHAR(20) NOT NULL,
  slot        INT Default 0,
  PRIMARY KEY (id)
);

create unique index sys_slide_slot_ui1 on gross.sys_slide_slot_tb (major_class);

insert into gross.sys_slide_slot_tb  (major_class,slot) values ('Default',0);

commit;





-- fix owner
ALTER TABLE gross.sysparams_tb
    OWNER TO "AP";

ALTER TABLE gross.sys_log_tb
    OWNER TO "AP";

ALTER TABLE gross.order_slide_tb
    OWNER TO "AP";

ALTER TABLE gross.order_gross_log_tb
    OWNER TO "AP";

ALTER TABLE gross.order_embed_log_tb
    OWNER TO "AP";

ALTER TABLE gross.order_counter_tb
    OWNER TO "AP";

ALTER TABLE gross.order_cassette_tb
    OWNER TO "AP";

ALTER TABLE gross.order_barcode_tb
    OWNER TO "AP";

ALTER TABLE gross.order_barcode_log_tb
    OWNER TO "AP";

ALTER TABLE gross.doctor_slide_log_tb
    OWNER TO "AP";

ALTER TABLE gross.sys_specimen_stain_tb 
    OWNER TO "AP";

ALTER TABLE gross.sys_cassette_magazine_tb 
    OWNER TO "AP";

ALTER TABLE gross.sys_slide_slot_tb 
    OWNER TO "AP";